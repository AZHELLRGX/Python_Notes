# python的运算符同样包含：算术运算符、赋值运算符、关系运算符、逻辑运算符

# 算术运算符与其他语言基本一致，不做额外讲解
# 有一个运算符 // 表示整除
a = 10 // 3
print(a)
# 但是对与浮点数，返回结果也是浮点数，也就是说结果虽然也是整除，但是仍然是浮点类型
a = 10.0 // 3
print(a)  # 结果为3.0

# 赋值运算符也基本与Java一致，支持 += 等操作，但不支持 i++ 语法操作

# 关系运算符
b = 4
print(b > a)  # 整数和浮点数可以比较，但是它们不可以与字符串进行比较
# 对字符串进行大小比较的时候，其实比较的是字符串的unicode编码，而且是逐位比较
# 可以使用这个特性对英文字符进行排序，但是一般来讲对于中文的意义不大
# 需要说明的是，python中的 == 或者 != 统一比较的是对象的值，而不是对象的id

# 逻辑运算符
# not 逻辑非  可以用来对布尔值进行取反操作；
# 			对于非布尔值，会先将其转换为布尔值，然后再取反；空字符串是False
# and 逻辑与
# or 逻辑或
# and与or依旧是常见的短路设计

# 条件运算符(三元运算符)  python的三元运算符与Java大不相同，而我们知道代码简洁之道不推荐在Java使用三元运算符
# 语法： 语句1 if 条件表达式 else 语句2 
a = 30
b = 20
print('a的值更大') if a > b else print('b的值更大')
max = a if a > b else b
print('max =', max)
# 看来每个语言都有每种语法的魅力，这里神似scala的if返回值设计

# 下面是一种特殊示例，因为and和or的短路设计，而且and的优先级高，2和3都会进行判断，则返回3，or则需要判断False，当第一个值是True的时候，则直接返回
a = 1 or 2 and 3
print(a)  # 所以这里的结果是1

# 条件运算符可以连着使用
result = 1 < 2 < 3 > 4
print(result)
